/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.pizzaproject.views;

import com.mycompany.pizzaproject.controllers.PedidoTbJpaController;
import com.mycompany.pizzaproject.controllers.PizzaTbJpaController;
import com.mycompany.pizzaproject.models.PedidoTb;
import com.mycompany.pizzaproject.models.PizzaTb;
import com.mycompany.pizzaproject.models.SaborTb;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author rafae
 */
public final class PizzaView extends ViewPart<PizzaTb, PizzaTbJpaController, PizzaTabela> {

    private PizzaTbJpaController controller;
    private List<SaborTb> sabores;
    private SaborTb sabor1;
    private SaborTb sabor2;

    public PizzaView() {
        initComponents();
        this.model = new PizzaTabela();
        this.element = null;
        txtTamanho.setEnabled(true);
        txtQuantidade.setEnabled(false);
        this.controller = new PizzaTbJpaController(this);
        sabor1 = sabor2 = null;
        initView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cbForma = new javax.swing.JComboBox<>();
        cbSabor1 = new javax.swing.JComboBox<>();
        lblForma = new javax.swing.JLabel();
        btnAlterarItem = new javax.swing.JButton();
        btnExcluirItem = new javax.swing.JButton();
        btnIncluirItem = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        txtTotalPedido = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cbSabor2 = new javax.swing.JComboBox<>();
        txtTamanho = new javax.swing.JFormattedTextField();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JFormattedTextField();
        rbDimensao = new javax.swing.JRadioButton();
        rbQuantidade = new javax.swing.JRadioButton();
        btnList = new javax.swing.JButton();

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Item de Pedido");

        jLabel9.setText("Formato Pizza:");
        jLabel9.setToolTipText("");

        jLabel16.setText("Sabor 1:");

        cbForma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quadrado", "Triângulo", "Círculo" }));
        cbForma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFormaItemStateChanged(evt);
            }
        });
        cbForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaActionPerformed(evt);
            }
        });

        cbSabor1.setName(""); // NOI18N
        cbSabor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSabor1ActionPerformed(evt);
            }
        });

        lblForma.setText("Lado (cm):");
        lblForma.setToolTipText("");

        btnAlterarItem.setText("Alterar Item do Pedido");
        btnAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItemActionPerformed(evt);
            }
        });

        btnExcluirItem.setText("Excluir Item do Pedido");
        btnExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemActionPerformed(evt);
            }
        });

        btnIncluirItem.setText("Salvar");
        btnIncluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirItemActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Resumo do Pedido");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Formato", "Sabor 1", "Sabor 2", "Area(cm²)", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setText("Total do Pedido:");

        txtTotalPedido.setEditable(false);
        txtTotalPedido.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTotalPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPedidoActionPerformed(evt);
            }
        });

        jLabel17.setText("Sabor 2:");

        cbSabor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSabor2ActionPerformed(evt);
            }
        });

        txtTamanho.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTamanhoActionPerformed(evt);
            }
        });

        lblQuantidade.setText("Quantidade (cm²):");
        lblQuantidade.setToolTipText("");

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        rbDimensao.setSelected(true);
        rbDimensao.setText("Lado/Raio");
        rbDimensao.setToolTipText("");
        rbDimensao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDimensaoActionPerformed(evt);
            }
        });

        rbQuantidade.setText("Quantidade");
        rbQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbQuantidadeActionPerformed(evt);
            }
        });

        btnList.setText("Listar resumo");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTotalPedido))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(cbForma, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rbDimensao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbQuantidade))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbSabor1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbSabor2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(198, 198, 198)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblQuantidade)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblForma)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(16, 16, 16))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnList)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAlterarItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluirItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnIncluirItem)))
                        .addGap(33, 33, 33)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbDimensao)
                    .addComponent(rbQuantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(cbSabor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cbSabor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnIncluirItem)
                            .addComponent(btnExcluirItem)
                            .addComponent(btnAlterarItem)
                            .addComponent(btnList))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalPedido)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblForma)
                            .addComponent(txtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuantidade))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 453, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbFormaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFormaItemStateChanged
        String formaSelecionada = cbForma.getSelectedItem().toString();
        switch(formaSelecionada){
            case("Quadrado"):
            case("Triângulo"):
            lblForma.setText("Lado (cm): ");
            break;
            case("Círculo"):
            lblForma.setText("Raio (cm): ");
            break;
            default:
            break;
        }
    }//GEN-LAST:event_cbFormaItemStateChanged

    private void cbFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFormaActionPerformed

    private void cbSabor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSabor1ActionPerformed
        int index = cbSabor1.getSelectedIndex();
        if(index > 0){
            sabor1 = sabores.get(index-1);
        } else {
            sabor1 = null;
        }
    }//GEN-LAST:event_cbSabor1ActionPerformed

    private void btnAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItemActionPerformed
        this.controller.edit();
    }//GEN-LAST:event_btnAlterarItemActionPerformed

    private void btnExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemActionPerformed
        this.controller.destroy();
    }//GEN-LAST:event_btnExcluirItemActionPerformed

    private void btnIncluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirItemActionPerformed
        this.controller.create();
    }//GEN-LAST:event_btnIncluirItemActionPerformed

    private void cbSabor2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSabor2ActionPerformed
        int index = cbSabor2.getSelectedIndex();
        if (index > 0) {
            sabor2 = sabores.get(index-1);
        } else {
            sabor2 = null;
        }
    }//GEN-LAST:event_cbSabor2ActionPerformed

    private void rbDimensaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDimensaoActionPerformed
        if(rbDimensao.isSelected()){
            txtTamanho.setEnabled(true);
            txtQuantidade.setEnabled(false);
        }
    }//GEN-LAST:event_rbDimensaoActionPerformed

    private void rbQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbQuantidadeActionPerformed
        if(rbQuantidade.isSelected()){
            txtQuantidade.setEnabled(true);
            txtTamanho.setEnabled(false);
        }
    }//GEN-LAST:event_rbQuantidadeActionPerformed

    private void txtTotalPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPedidoActionPerformed

    private void txtTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTamanhoActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        this.controller.list();
    }//GEN-LAST:event_btnListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarItem;
    private javax.swing.JButton btnExcluirItem;
    private javax.swing.JButton btnIncluirItem;
    private javax.swing.JButton btnList;
    private javax.swing.JComboBox<String> cbForma;
    private javax.swing.JComboBox<Object> cbSabor1;
    private javax.swing.JComboBox<Object> cbSabor2;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable;
    private javax.swing.JLabel lblForma;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JRadioButton rbDimensao;
    private javax.swing.JRadioButton rbQuantidade;
    private javax.swing.JFormattedTextField txtQuantidade;
    private javax.swing.JFormattedTextField txtTamanho;
    private javax.swing.JTextField txtTotalPedido;
    // End of variables declaration//GEN-END:variables

    private void preencheComboSabores(){
        PedidoTbJpaController pedidoController = new PedidoTbJpaController(true);
        this.sabores = pedidoController.findSaborTbEntities();
         cbSabor1.addItem("");
         cbSabor2.addItem("");
         for(SaborTb s : sabores){
            cbSabor1.addItem(s.getDescricao());
            cbSabor2.addItem(s.getDescricao());
        }        
    }
    
    public PizzaTbJpaController getController() {
        return this.controller;
    }
    
    @Override
    public void setController(PizzaTbJpaController controller) {
        this.controller = controller;
    }

    @Override
    public void initView() {
       preencheComboSabores();
       
       jTable.setModel(this.model);
       jTable.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linhaClicadaParaAtualizacao = jTable.rowAtPoint(evt.getPoint());
                PizzaTb pizza = model.getModel(linhaClicadaParaAtualizacao);
                setForm(pizza);
            }
        });
       txtTamanho.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              calculaArea();
            }
            public void removeUpdate(DocumentEvent e) {
              calculaArea();
            }
            public void insertUpdate(DocumentEvent e) {
              calculaArea();
            }

            public void calculaArea() {
                if(rbDimensao.isSelected()){
                    String formaSelecionada = cbForma.getSelectedItem().toString();
                    if(txtTamanho.getText().equals(""))
                        return;

                    Double tamanho = Double.parseDouble(txtTamanho.getText().replace(",", "."));
                    txtQuantidade.setText(String.format("%.2f",controller.calculaAreaPizza(formaSelecionada, tamanho)));
                }
            }
        });   
       txtQuantidade.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
              calculaLadoRaio();
            }
            public void removeUpdate(DocumentEvent e) {
              calculaLadoRaio();
            }
            public void insertUpdate(DocumentEvent e) {
              calculaLadoRaio();
            }

            public void calculaLadoRaio() {
                if(rbQuantidade.isSelected()){
                    String formaSelecionada = cbForma.getSelectedItem().toString();
                    if(txtQuantidade.getText().equals(""))
                        return;

                    Double area = Double.parseDouble(txtQuantidade.getText().replace(",", "."));
                    txtTamanho.setText(String.format("%.2f",controller.calculaDimensaoPizza(formaSelecionada, area)));
                }
            }
        });
    }

    @Override
    public void list(List<PizzaTb> models) {
        list(models, new PedidoTb());
    };
    
    public void list(List<PizzaTb> models, PedidoTb pedido) {
        this.element = null;
        this.model.limpaTabela();
        models.forEach(pizza -> {
            this.model.insert(pizza);
        });
        txtTotalPedido.setText(Double.toString(pedido.getTotalPedido()));
    }

    @Override
    public PizzaTb getForm() {
        String formaSelecionada = cbForma.getSelectedItem().toString();
        if(txtTamanho.getText().equals("")){
            showError("A dimensão da pizza deve ser informada! (Lado/Raio)");
            return null;
        }

        if(txtQuantidade.getText().equals("")){
            showError("A quantidade da pizza deve ser informada!");
            return null;
        }
        
        if (sabor1 == null) {
            showError("Por favor, selecione o sabor 1");
            return null;
        }

        Double tamanho = Double.parseDouble(txtTamanho.getText().replace(",", "."));
        switch(formaSelecionada){
            case("Quadrado"):
            if(tamanho < 10 || tamanho > 40){
                showError("O lado da pizza retangular deve possuir no mínimo 10 cm e no máximo 40 cm!");
                return null;
            }
            break;
            case("Triângulo"):
            if(tamanho < 20 || tamanho > 60){
                showError("O lado da pizza triangular deve possuir no mínimo 20 cm e no máximo 60 cm!");
                return null;
            }
            break;
            case("Círculo"):
            if(tamanho < 7 || tamanho > 23){
               showError("O raio da pizza circular deve possuir no mínimo 7 cm e no máximo 23 cm!");
                return null;
            }
            break;
            default:
            break;
        }

        PizzaTb pizzaTb = new PizzaTb();
        pizzaTb.setForma(formaSelecionada);
        pizzaTb.setTamanho(tamanho);
        ArrayList<SaborTb> saboresPizza = new ArrayList<SaborTb>();
        saboresPizza.add(sabor1);
        double amount = sabor1.getTipoTb().getPreco();
        if(sabor2 != null) {
            amount = ((amount + sabor2.getTipoTb().getPreco()) / 2);
            saboresPizza.add(sabor2);
        }
        pizzaTb.setSaborTbCollection(saboresPizza);
        
        double size = Double.parseDouble(txtQuantidade.getText().replace(",", "."));
        
        pizzaTb.setTotalPizza(amount * size);
        return pizzaTb;
    }

    @Override
    public PizzaTb getForm(Boolean update) {
        PizzaTb pizza = getForm();
        if (update) {
            if (this.element == null)
                return null;
            pizza.setPizzaId(this.element.getPizzaId());
        }
        
        return pizza;
    }

    @Override
    public void setForm(PizzaTb pizza) {
        this.element = pizza;
        List<SaborTb> pizzaSabores = (List<SaborTb>) pizza.getSaborTbCollection();
        cbSabor2.setSelectedIndex(0);
        cbSabor1.setSelectedIndex(0);
        for (int i = 0; i < pizzaSabores.size(); i++) {
            int index = sabores.indexOf(pizzaSabores.get(i));
            if (i == 0) cbSabor1.setSelectedIndex(index + 1);
            else cbSabor2.setSelectedIndex(index + 1);
        }
        txtTamanho.setText(Double.toString(pizza.getTamanho()));
        cbForma.setSelectedItem(pizza.getForma());
    }

    @Override
    public PizzaTb getModel() {
        return this.element;
    }

    @Override
    public List<PizzaTb> getModels() {
        clearForm();
        int[] linhasSelecionadas = jTable.getSelectedRows();
        List<PizzaTb> listaExcluir = new ArrayList();
        for (int i = 0; i < linhasSelecionadas.length; i++) {
            PizzaTb tipo = this.model.getModel(linhasSelecionadas[i]);
            listaExcluir.add(tipo);
        }
        return listaExcluir;
    }

    @Override
    public void updateModel(PizzaTb model) {
        clearForm();
        this.model.fireTableRowsUpdated(this.linhaClicadaParaAtualizacao, this.linhaClicadaParaAtualizacao);
    }

    @Override
    public void insertModel(PizzaTb model) {
        clearForm();
        this.model.insert(model);
    }

    @Override
    public void deleteModel(List<PizzaTb> models) {
        clearForm();
        this.model.removeModels(models);
    }
    
    private void clearForm() {
        this.element = null;
        cbSabor2.setSelectedIndex(0);
        cbSabor1.setSelectedIndex(0);
    }
}
